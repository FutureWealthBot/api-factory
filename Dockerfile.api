# Fastify API (dev-ish)
FROM node:22-alpine
WORKDIR /app
ARG TRACK=""
ENV TRACK=${TRACK}

# Use the built backend distribution which contains the full API (including admin routes)
COPY api-factory/backend/package.json ./api-factory/backend/package.json
COPY api-factory/backend/dist ./api-factory/backend/dist

# Add core package so pnpm can resolve workspace dependency (preserve existing layout)
COPY packages/core/package.json ./packages/core/package.json
COPY packages/core/dist ./packages/core/dist

# Make package available as a node module for bare imports
RUN mkdir -p /app/node_modules/@api-factory && cp -r packages/core /app/node_modules/@api-factory/core

# Fix ESM relative imports in core to include .js extension so Node can resolve them
RUN if [ -f /app/packages/core/dist/index.js ]; then \
	sed -i "s|export \* from './tiers';|export * from './tiers.js';|g" /app/packages/core/dist/index.js || true; \
	fi

# Install curl (used by docker healthcheck) and production dependencies for the backend
RUN apk add --no-cache curl && \
	corepack enable && corepack prepare pnpm@9.9.0 --activate && \
	pnpm i --prod --filter ./api-factory/backend --workspace-root=false --reporter=silent && \
	# Ensure fastify is available for admin shim
	pnpm add --prod fastify@^4.20.0 --reporter=silent

ENV PORT=8787 BIND_HOST=0.0.0.0 NODE_ENV=production
EXPOSE 8787
# Copy ESM startup wrapper and run it to provide __dirname for legacy-built files
COPY start-server.mjs ./start-server.mjs
COPY admin-shim ./admin-shim
# Run the lightweight admin shim (provides /_meta and /api/admin/* for testing)
CMD ["node", "admin-shim/server.js"]
