name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services: {}
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Start backend
        run: |
          nohup bash -lc "cd api-factory/backend && pnpm dev > /tmp/backend.log 2>&1 & echo $!" > /tmp/pid && sleep 1

      - name: Wait for backend health
        run: |
          for i in {1..30}; do
            if curl -sS http://localhost:3000/_api/healthz >/dev/null 2>&1; then
              echo ready && break
            fi
            sleep 1
          done

      - name: Run unit + mocked API tests
        run: |
          node apps/user-bot/test.js
          node apps/user-bot/test-api.js

      - name: Run live integration tests
        run: |
          node apps/user-bot/test-api-live.js
          node apps/user-bot/test-api-echo.js
          node apps/user-bot/test-api-negative.js

      - name: Teardown backend
        run: |
          if [ -f /tmp/pid ]; then kill $(cat /tmp/pid) || true; fi
name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Enable corepack / pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.9.0 --activate
          pnpm -v

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: pnpm-${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-${{ matrix.node }}-

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Lint (if present)
        run: |
          pnpm -r --silent run | grep -q '^lint$' && pnpm -r lint || echo "no lint scripts"

      - name: Typecheck (if present)
        run: |
          pnpm -r --silent run | grep -q '^typecheck$' && pnpm -r typecheck || echo "no typecheck scripts"

      - name: Test (if present)
        run: |
          pnpm -r --silent run | grep -q '^test$' && pnpm -r test || echo "no test scripts"

      - name: Build (if present)
        run: |
          pnpm -r --silent run | grep -q '^build$' && pnpm -r build || echo "no build scripts"

      - name: Upload build artifacts (admin-web dist if exists)
        uses: actions/upload-artifact@v4
        with:
          name: admin-web-dist-${{ matrix.node }}
          path: apps/admin-web/dist
          if-no-files-found: ignore
