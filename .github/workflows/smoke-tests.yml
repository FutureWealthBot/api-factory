name: CI â€” Smoke tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]

concurrency:
  group: smoke-tests-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: read

jobs:
  smoke-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Ensure docker & docker compose plugin available
        run: |
          # retry apt-get to avoid transient network failures
          for i in 1 2 3; do
            sudo apt-get update && sudo apt-get install -y docker-compose-plugin && break || sleep 2
          done
          # confirm docker compose plugin is available
          if ! docker compose version >/dev/null 2>&1; then
            echo "docker compose plugin not available" >&2
            docker --version || true
            ls -la /usr/libexec/docker/cli-plugins || true
            exit 1
          fi

      - name: Build and start MVP stack
        run: |
          TRACK=MVP docker compose up -d --build

      - name: Wait for API health
        run: |
          for i in $(seq 1 30); do
            if curl -fsS http://localhost:8787/_api/healthz >/dev/null; then
              echo "API healthy" && break
            fi
            echo "waiting for API... ($i)"; sleep 2
          done

      - name: Run smoke tests
        run: |
          chmod +x ./scripts/smoke-tests.sh || true
          ./scripts/smoke-tests.sh http://localhost:3000

      - name: Run authenticated smoke tests (if secret present)
        if: secrets.SMOKE_API_KEY != ''
        run: |
          chmod +x ./scripts/smoke-tests.sh || true
          # pass empty API_BASE as 2nd arg and the API key as 3rd arg
          ./scripts/smoke-tests.sh http://localhost:3000 '' "${{ secrets.SMOKE_API_KEY }}"

      - name: Tear down
        if: always()
        run: |
          docker compose down -v || true
